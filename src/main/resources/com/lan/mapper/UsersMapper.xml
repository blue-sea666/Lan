<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lan.mapper.UsersMapper" >
  <resultMap id="BaseResultMap" type="com.lan.pojo.Users" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="users_name" property="usersName" jdbcType="VARCHAR" />
    <result column="users_password" property="usersPassword" jdbcType="VARCHAR" />
    <result column="users_headimg" property="usersHeadimg" jdbcType="VARCHAR" />
    <result column="users_signature" property="usersSignature" jdbcType="VARCHAR" />
    <result column="users_sex" property="usersSex" jdbcType="VARCHAR" />
    <result column="users_github_link" property="usersGithubLink" jdbcType="VARCHAR" />
    <result column="users_qq" property="usersQq" jdbcType="VARCHAR" />
    <result column="suers_email" property="suersEmail" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="userresultMap" type="com.lan.pojo.Users" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="users_name" property="usersName" jdbcType="VARCHAR" />
    <result column="users_password" property="usersPassword" jdbcType="VARCHAR" />
    <result column="users_headimg" property="usersHeadimg" jdbcType="VARCHAR" />
    <result column="users_signature" property="usersSignature" jdbcType="VARCHAR" />
    <result column="users_sex" property="usersSex" jdbcType="VARCHAR" />
    <result column="users_github_link" property="usersGithubLink" jdbcType="VARCHAR" />
    <result column="users_qq" property="usersQq" jdbcType="VARCHAR" />
    <result column="suers_email" property="suersEmail" jdbcType="VARCHAR" />
  </resultMap>
  <select id="count" resultType="java.lang.Integer">select count(1) from users</select>
  <select id="login" resultMap="BaseResultMap" parameterType="com.lan.pojo.Users">
select * from users where users_name=#{usersName} and users_password=#{usersPassword}</select>
  <select id="find" resultMap="userresultMap" >
select user_id,users_name,users_headimg,users_signature,users_sex,users_github_link,users_qq,suers_email from users limit #{page},#{size}

</select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, users_name, users_password, users_headimg, users_signature, users_sex, users_github_link, 
    users_qq, suers_email
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lan.pojo.UsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lan.pojo.UsersExample" >
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lan.pojo.Users" >
    insert into users (user_id, users_name, users_password, 
      users_headimg, users_signature, users_sex, 
      users_github_link, users_qq, suers_email
      )
    values (#{userId,jdbcType=INTEGER}, #{usersName,jdbcType=VARCHAR}, #{usersPassword,jdbcType=VARCHAR}, 
      #{usersHeadimg,jdbcType=VARCHAR}, #{usersSignature,jdbcType=VARCHAR}, #{usersSex,jdbcType=VARCHAR}, 
      #{usersGithubLink,jdbcType=VARCHAR}, #{usersQq,jdbcType=VARCHAR}, #{suersEmail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lan.pojo.Users" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="usersName != null" >
        users_name,
      </if>
      <if test="usersPassword != null" >
        users_password,
      </if>
      <if test="usersHeadimg != null" >
        users_headimg,
      </if>
      <if test="usersSignature != null" >
        users_signature,
      </if>
      <if test="usersSex != null" >
        users_sex,
      </if>
      <if test="usersGithubLink != null" >
        users_github_link,
      </if>
      <if test="usersQq != null" >
        users_qq,
      </if>
      <if test="suersEmail != null" >
        suers_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="usersName != null" >
        #{usersName,jdbcType=VARCHAR},
      </if>
      <if test="usersPassword != null" >
        #{usersPassword,jdbcType=VARCHAR},
      </if>
      <if test="usersHeadimg != null" >
        #{usersHeadimg,jdbcType=VARCHAR},
      </if>
      <if test="usersSignature != null" >
        #{usersSignature,jdbcType=VARCHAR},
      </if>
      <if test="usersSex != null" >
        #{usersSex,jdbcType=VARCHAR},
      </if>
      <if test="usersGithubLink != null" >
        #{usersGithubLink,jdbcType=VARCHAR},
      </if>
      <if test="usersQq != null" >
        #{usersQq,jdbcType=VARCHAR},
      </if>
      <if test="suersEmail != null" >
        #{suersEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lan.pojo.UsersExample" resultType="java.lang.Integer" >
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update users
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.usersName != null" >
        users_name = #{record.usersName,jdbcType=VARCHAR},
      </if>
      <if test="record.usersPassword != null" >
        users_password = #{record.usersPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.usersHeadimg != null" >
        users_headimg = #{record.usersHeadimg,jdbcType=VARCHAR},
      </if>
      <if test="record.usersSignature != null" >
        users_signature = #{record.usersSignature,jdbcType=VARCHAR},
      </if>
      <if test="record.usersSex != null" >
        users_sex = #{record.usersSex,jdbcType=VARCHAR},
      </if>
      <if test="record.usersGithubLink != null" >
        users_github_link = #{record.usersGithubLink,jdbcType=VARCHAR},
      </if>
      <if test="record.usersQq != null" >
        users_qq = #{record.usersQq,jdbcType=VARCHAR},
      </if>
      <if test="record.suersEmail != null" >
        suers_email = #{record.suersEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update users
    set user_id = #{record.userId,jdbcType=INTEGER},
      users_name = #{record.usersName,jdbcType=VARCHAR},
      users_password = #{record.usersPassword,jdbcType=VARCHAR},
      users_headimg = #{record.usersHeadimg,jdbcType=VARCHAR},
      users_signature = #{record.usersSignature,jdbcType=VARCHAR},
      users_sex = #{record.usersSex,jdbcType=VARCHAR},
      users_github_link = #{record.usersGithubLink,jdbcType=VARCHAR},
      users_qq = #{record.usersQq,jdbcType=VARCHAR},
      suers_email = #{record.suersEmail,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lan.pojo.Users" >
    update users
    <set >
      <if test="usersName != null" >
        users_name = #{usersName,jdbcType=VARCHAR},
      </if>
      <if test="usersPassword != null" >
        users_password = #{usersPassword,jdbcType=VARCHAR},
      </if>
      <if test="usersHeadimg != null" >
        users_headimg = #{usersHeadimg,jdbcType=VARCHAR},
      </if>
      <if test="usersSignature != null" >
        users_signature = #{usersSignature,jdbcType=VARCHAR},
      </if>
      <if test="usersSex != null" >
        users_sex = #{usersSex,jdbcType=VARCHAR},
      </if>
      <if test="usersGithubLink != null" >
        users_github_link = #{usersGithubLink,jdbcType=VARCHAR},
      </if>
      <if test="usersQq != null" >
        users_qq = #{usersQq,jdbcType=VARCHAR},
      </if>
      <if test="suersEmail != null" >
        suers_email = #{suersEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lan.pojo.Users" >
    update users
    set users_name = #{usersName,jdbcType=VARCHAR},
      users_password = #{usersPassword,jdbcType=VARCHAR},
      users_headimg = #{usersHeadimg,jdbcType=VARCHAR},
      users_signature = #{usersSignature,jdbcType=VARCHAR},
      users_sex = #{usersSex,jdbcType=VARCHAR},
      users_github_link = #{usersGithubLink,jdbcType=VARCHAR},
      users_qq = #{usersQq,jdbcType=VARCHAR},
      suers_email = #{suersEmail,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>